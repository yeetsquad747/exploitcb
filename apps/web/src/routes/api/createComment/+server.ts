import { PrismaClient } from '@prisma/client';
import { json } from '@sveltejs/kit';

const prisma = new PrismaClient();

export async function POST(params: any) {
  const data = await params.request.json();
  const user = await prisma.user.findUnique({
    where: {
      // @ts-ignore
      user_id: jwt.decode(data.token).id
    }
  });
  if (!user) {
    return await json({ error: 'Invalid token' });
  }
  let tokenIsValid = false;
  try {
    // @ts-ignore
    tokenIsValid = await jwt.verify(data.token, process.env.JWT_KEY);
  } catch (error) {
    return await json('Invalid token');
  }
  if (tokenIsValid) {
    const id = Math.floor(Math.random() * 10000000000000000);
    try {
      await prisma.comment.create({
        // @ts-ignore
        data: {
          comment_id: id,
          body: data.content,
          user: {
            connect: {
              // @ts-ignore
              user_id: jwt.decode(data.token).id
            }
          },
          post: {
            connect: {
              // @ts-ignore
              post_id: data.post_id
            }
          }
        }
      });
    } catch {
      return await json({ error: 'Something went wrong' });
    }
    return await json({ success: true });
  }
}
